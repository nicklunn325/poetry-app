{"version":3,"sources":["components/Errors.js","components/Signup.js","components/Login.js","components/Poems.js","components/Home.js","components/Navbar.js","components/Logout.js","components/NewPoemForm.js","App.js","reportWebVitals.js","index.js"],"names":["Errors","errors","map","error","Signup","handleUserLoginAndSignup","useState","state","setState","onChange","e","target","name","value","onSubmit","preventDefault","config","method","headers","body","JSON","stringify","fetch","then","res","json","data","type","Login","Poems","poems","Home","Navbar","to","Logout","setCurrentUser","history","useHistory","useEffect","push","NewPoemForm","handleNewPoem","categories","for","id","disabled","selected","category","title","App","currentUser","setErrors","setCategories","setPoems","user","fetchPoems","fetchCategories","checkSessionId","className","username","exact","path","poem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.077e8547.chunk.js","sourcesContent":["// import Error from './Error'\nconst Errors = ({errors}) => {\n\n    const renderErrors = () => {\n        return errors.map( error => <p> {error} </p>)\n    }\n    return (\n        <div>\n            {renderErrors()}\n        </div>\n    )\n}\n\nexport default Errors;","import {useState} from 'react'\nimport Errors from './Errors'\nconst Signup = ({ handleUserLoginAndSignup, errors}) => {\n\n    const [state, setState] = useState({})\n\n\n    const onChange = (e) => {\n        setState({...state, [e.target.name]: e.target.value})\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        \n        const config = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(state)\n        }\n\n        // fetch('http://localhost:3000/users', config)\n        fetch('/users', config)   // need to set up proxy\n        .then(res => res.json())\n        .then(data => handleUserLoginAndSignup(data))\n        // .catch(error => console.log(error, 'error'))\n    }\n\n    return (\n        <div>\n            <Errors errors={errors}/>\n            <form onSubmit={onSubmit}>\n                <label>Username:</label>\n                <input onChange={onChange} name=\"username\" type=\"text\"/>\n                <br/>\n                <label>Password:</label>\n                <input onChange={onChange} name=\"password\" type=\"password\"/>\n                <br/>\n                <label>Password Confirmation:</label>\n                <input onChange={onChange} name=\"password_confirmation\" type=\"password\"/>\n                <br/>\n                <input type=\"submit\" value=\"Signup\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default Signup;","import {useState} from 'react'\nimport Errors from './Errors'\nconst Login = ({errors, handleUserLoginAndSignup}) => {\n\n    const [state, setState] = useState({})\n\n    const onChange = (e) => {\n        setState({...state, [e.target.name]: e.target.value})\n    }\n\n    const onSubmit = (e) => {\n      e.preventDefault()\n\n      let config = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify(state)\n      }\n\n      fetch('/login', config)\n      .then(res => res.json())\n      .then(data => handleUserLoginAndSignup(data))\n    }\n\n    return (\n        <div>\n            <Errors errors={errors}/>\n            <form onSubmit={onSubmit}>\n                <label>Username:</label>\n                <input onChange={onChange} name=\"username\" type=\"text\"/>\n                <br/>\n                <label>Password:</label>\n                <input onChange={onChange} name=\"password\" type=\"password\"/>\n                <br/>\n                <input type=\"submit\" value=\"Login\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default Login;","import Poem from './Poem'\n\nconst Poems = ({ poems }) => {\n\n    const renderPoems = () => {\n        return poems.map( poem => <Poem key={poem.id} poem={poem}/>) \n    }\n    \n    return (\n        <div>\n            {/* { renderPoems() } */}\n        </div>\n    )\n}\n\nexport default Poems;","import Poems from './Poems'\n\nconst Home = ({ poems }) => {\n    return(\n    <div>\n        <h1> WELCOME HOME!</h1>\n        <Poems poems={poems}/>\n    </div>\n    )\n}\n\nexport default Home;","import {Link} from 'react-router-dom'\n\nconst Navbar = () => {\n    return(\n        <>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/signup\">Signup</Link>\n            </li>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n            <li>\n              <Link to=\"/poems/new\">New Poem</Link>\n            </li>\n            <li>\n              <Link to='/logout'>Logout</Link>\n            </li>\n          </ul>\n        </nav>\n        </>\n    )\n}\n\nexport default Navbar;","import { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nconst Logout = ({setCurrentUser}) => {\n    const history = useHistory()\n    useEffect(() => {\n        let config = {\n            method: 'DELETE'\n        }\n\n        fetch('/logout', config)\n        setCurrentUser(null)\n        history.push('/login')\n    })\n    // useEffect(logout)\n    // async function logout(){\n    //     let config = {\n    //         method: 'DELETE'\n    //     }\n\n    //     await fetch('/logout', config)\n    //     setCurrentUser(null)\n    //     history.push('/login')\n    // }\n    return(\n        <h1>bananas</h1>\n    )\n}\n\nexport default Logout","\nimport {useState} from 'react'\nimport Errors from './Errors'\nconst NewPoemForm = ({ handleNewPoem, categories, errors}) => {\n\n    const [state, setState] = useState({})\n\n\n    const onChange = (e) => {\n        setState({...state, [e.target.name]: e.target.value})\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        \n        const config = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(state)\n        }\n\n        // fetch('http://localhost:3000/users', config)\n        fetch('/poems', config)   // need to set up proxy\n        .then(res => res.json())\n        .then(data => handleNewPoem(data))\n        // .catch(error => console.log(error, 'error'))\n    }\n\n    const renderCategoryOptions = () => {\n        return categories.map(category => <option value={category.id}>{category.title}</option>)\n    }\n\n    return (\n        <div>\n            <Errors errors={errors}/>\n            <form onSubmit={onSubmit}>\n                <label>Title:</label>\n                <input onChange={onChange} name=\"title\" type=\"text\"/>\n                <br/>\n                <label>Poem Content:</label>\n                <input onChange={onChange} name=\"content\" type=\"textfield\"/>\n                <br/>\n                <label for=\"category_id\">Choose a Category:</label>\n                <select onChange={onChange} name=\"category_id\" id=\"category_id\">\n                    <option disabled selected value> -- select an option -- </option>\n                    {renderCategoryOptions()}\n                </select>\n                <input type=\"submit\" value=\"Create Poem\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default NewPoemForm;","import './App.css';\nimport Signup from './components/Signup'\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport Navbar from './components/Navbar'\nimport Logout from './components/Logout'\nimport NewPoemForm from './components/NewPoemForm'\nimport {useState, useEffect} from 'react'\nimport {Switch, Route, useHistory} from 'react-router-dom'\n\nconst App = () => {\n\n  const history = useHistory()\n  const [currentUser, setCurrentUser] = useState(null);\n  const [errors, setErrors] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [poems, setPoems] = useState([])\n\n  const handleUserLoginAndSignup = (data) => {\n    data.errors ? setErrors(data.errors) : setCurrentUser(data.user)\n    if(!data.errors){\n      history.push('/')\n      setErrors([])\n    }\n  }\n\n  const handleNewPoem = (data) => {\n    // debugger;\n    data.errors ? setErrors(data.errors) : setPoems([...poems, data.poem])\n    if(!data.errors){\n      history.push('/')\n      setErrors([])\n    }\n  }\n\n  const stateInitializer = () => {\n    fetchCategories()\n    checkSessionId()\n    fetchPoems() // should we do this? is it necessary?\n  }\n\n  const fetchPoems = () => {\n    fetch('/poems')\n    .then(res => res.json())\n    .then(data => setPoems(data.poems))\n  }\n\n  const fetchCategories = () => {\n    fetch('/categories')\n    .then(res => res.json())\n    .then(data => setCategories(data.categories))\n  }\n\n  const checkSessionId = () => {\n    fetch('/me')\n    .then(res => res.json())\n    .then(data => setCurrentUser(data.user))\n  }\n    \n  useEffect(stateInitializer, []);\n\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      { currentUser ? `${currentUser.username} is currently logged in.` : null}\n      <Switch>\n        <Route exact path='/'>\n          <Home poems={poems}/>\n        </Route>\n        <Route path='/poems/new'>\n          <NewPoemForm handleNewPoem={handleNewPoem} categories={categories} errors={errors}/>\n        </Route>\n        <Route path='/signup'>\n          <Signup errors={errors} handleUserLoginAndSignup={handleUserLoginAndSignup} />  \n        </Route>\n        <Route path='/login'>\n          <Login errors={errors} handleUserLoginAndSignup={handleUserLoginAndSignup} />\n        </Route>\n        <Route path='/logout'>\n          <Logout setCurrentUser={setCurrentUser}/>\n        </Route>\n\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}